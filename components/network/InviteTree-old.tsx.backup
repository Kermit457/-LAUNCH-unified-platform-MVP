"use client"

import { motion } from 'framer-motion'
import { Users, TrendingUp, Award, ChevronRight } from 'lucide-react'

interface InviteNode {
  id: string
  handle: string
  invited: number
  earnings: string
  active: boolean
  children?: InviteNode[]
}

const mockInviteTree: InviteNode = {
  id: 'you',
  handle: 'You',
  invited: 12,
  earnings: '$480',
  active: true,
  children: [
    {
      id: '1',
      handle: 'crypto_mike',
      invited: 8,
      earnings: '$320',
      active: true,
      children: [
        {
          id: '1-1',
          handle: 'sarah_dev',
          invited: 3,
          earnings: '$120',
          active: true
        },
        {
          id: '1-2',
          handle: 'alex_builder',
          invited: 5,
          earnings: '$200',
          active: false
        }
      ]
    },
    {
      id: '2',
      handle: 'degen_trader',
      invited: 4,
      earnings: '$160',
      active: true,
      children: [
        {
          id: '2-1',
          handle: 'meme_master',
          invited: 2,
          earnings: '$80',
          active: true
        }
      ]
    }
  ]
}

interface InviteNodeProps {
  node: InviteNode
  depth?: number
  isLast?: boolean
}

function InviteNodeComponent({ node, depth = 0, isLast = false }: InviteNodeProps) {
  const hasChildren = node.children && node.children.length > 0

  return (
    <div className="relative">
      {/* Node */}
      <motion.div
        initial={{ opacity: 0, x: -10 }}
        animate={{ opacity: 1, x: 0 }}
        transition={{ delay: depth * 0.1 }}
        className={`
          flex items-center gap-2 p-2 rounded-lg transition-all
          ${depth === 0
            ? 'bg-[#8800FF]/20 border border-[#8800FF]/40'
            : 'bg-zinc-800/50 border border-zinc-700 hover:border-zinc-600'
          }
        `}
        style={{ marginLeft: depth > 0 ? `${depth * 16}px` : 0 }}
      >
        {/* Connection Line Indicator */}
        {depth > 0 && (
          <div className="absolute left-0 top-1/2 -translate-y-1/2 w-3 h-px bg-zinc-700" />
        )}

        {/* Status Indicator */}
        <div className={`w-2 h-2 rounded-full flex-shrink-0 ${node.active ? 'bg-green-500' : 'bg-zinc-600'}`} />

        {/* Info */}
        <div className="flex-1 min-w-0">
          <div className="flex items-center gap-2">
            <span className={`text-xs font-bold truncate ${depth === 0 ? 'text-[#8800FF]' : 'text-white'}`}>
              {node.handle}
            </span>
            {hasChildren && (
              <ChevronRight className="w-3 h-3 text-zinc-500" />
            )}
          </div>
          <div className="flex items-center gap-2 text-[10px] text-zinc-500">
            <span>{node.invited} invited</span>
            <span>â€¢</span>
            <span className="text-[#00FF88]">{node.earnings}</span>
          </div>
        </div>
      </motion.div>

      {/* Children */}
      {hasChildren && (
        <div className="mt-1 space-y-1">
          {node.children!.map((child, index) => (
            <InviteNodeComponent
              key={child.id}
              node={child}
              depth={depth + 1}
              isLast={index === node.children!.length - 1}
            />
          ))}
        </div>
      )}
    </div>
  )
}

export function InviteTree() {
  const totalInvited = 12
  const totalEarnings = '$480'
  const activeRate = 75 // 9 out of 12 active

  return (
    <div className="p-4 rounded-xl bg-zinc-900/30 border border-zinc-800">
      <div className="flex items-center justify-between mb-4">
        <h2 className="text-lg font-bold text-white flex items-center gap-2">
          <Users className="w-5 h-5 text-[#8800FF]" />
          Your Invite Tree
        </h2>
        <button className="text-xs text-[#8800FF] hover:text-[#9910FF] font-bold transition-colors">
          View All
        </button>
      </div>

      {/* Stats Summary */}
      <div className="grid grid-cols-3 gap-2 mb-4">
        <div className="p-2 rounded-lg bg-zinc-800/50 border border-zinc-700">
          <div className="text-xs text-zinc-400">Invited</div>
          <div className="text-lg font-bold text-white">{totalInvited}</div>
        </div>
        <div className="p-2 rounded-lg bg-zinc-800/50 border border-zinc-700">
          <div className="text-xs text-zinc-400">Earned</div>
          <div className="text-lg font-bold text-[#00FF88]">{totalEarnings}</div>
        </div>
        <div className="p-2 rounded-lg bg-zinc-800/50 border border-zinc-700">
          <div className="text-xs text-zinc-400">Active</div>
          <div className="text-lg font-bold text-[#00FFFF]">{activeRate}%</div>
        </div>
      </div>

      {/* Tree Visualization */}
      <div className="space-y-1 max-h-[400px] overflow-y-auto scrollbar-thin scrollbar-thumb-zinc-700 scrollbar-track-zinc-900">
        <InviteNodeComponent node={mockInviteTree} />
      </div>

      {/* Incentive Banner */}
      <div className="mt-4 p-3 rounded-lg bg-gradient-to-r from-[#8800FF]/10 to-[#00FF88]/10 border border-[#8800FF]/30">
        <div className="flex items-start gap-2">
          <Award className="w-4 h-4 text-[#FFD700] flex-shrink-0 mt-0.5" />
          <div>
            <p className="text-xs font-bold text-white mb-1">2% on every trade</p>
            <p className="text-[10px] text-zinc-400">
              Your invites trade, you earn. Bring builders, get paid forever.
            </p>
          </div>
        </div>
      </div>

      {/* Empty State (when no invites) */}
      {totalInvited === 0 && (
        <div className="py-8 text-center">
          <Users className="w-12 h-12 text-zinc-700 mx-auto mb-3" />
          <p className="text-sm text-zinc-500 mb-3">No invites yet. Start growing your network.</p>
          <button className="px-4 py-2 rounded-lg bg-[#8800FF] hover:bg-[#9910FF] text-white font-bold text-sm transition-all">
            Invite Now
          </button>
        </div>
      )}
    </div>
  )
}
